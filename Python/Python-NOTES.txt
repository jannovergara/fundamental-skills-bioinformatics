Python and R
Python ecosystem
Guido van Rossum

Python installation and environments
Jupyter Lab

Python native data structures
- The two languages are interpreted - no need to compile before executing the code
- Dynamic typing - no need to declare in advance the type (eg. int, boolean, etc) of a variable

Relevant differences
- built-in data types are different
-- vectors and arrays are readily available in Relevant
-- tuples and dictionaries are present in Python

Loops, if statement, function declarations: different syntax

Lists: [3. True, "abc", 3] - ordered collection of values

Tuples: (3, True, "abc", 3) - similar to lists but once created cannot be modified

Sets: {3, True, "abc"} - collection of unique elements

Dictionaries: {"Key1":3, "OneMoreKey":True, "Key3":"abc"} - collection of unique keys each associated with a value

Python Modules
- scientific computation capabilities
- data analysis functions
- web development tools

Modules are .py files containing multiple functions eg random.py
Packages / libraries are collections of modules coherently organized (matplotlib)
Frameworks offer a complete programming ecosystem for large scale project eg Django

NumPy Packages
R natively supports vectors, matrices and multi-dimensional arrays
Arithmetic operators on vectors are executed in a scalar way
Data structures purposedly devised for statistical analysis eg data frames

NumPy
- NumPy allows to define arrays
- NumPy arrays can be multiplied, summed, etc., as mathematical vector / matrices
- NumPy provides a number of functions for mathematical operations eg correlations

The Pandas Package
R
- data frames allow to intuitively represent and manipulate tabular data
- data frames can also be used in Python thanks to the pandas Package

Pandas
- ways for transforming and manipulating your data
- functions for reading and writing data from/to files
- visualization and data exploration functionalities

Week 4
Overview

The main objective is to work on a real-case scenario and through this process to identify:
- what are the logical steps that should be followed?
- what are the difficulties that should be expected?

Get experience with some widely-used packages for the analysis of biological data
- Limma, DESeq2 and edgeR in R
- AnnData, scanpy in Python

Case study
Single-cell transcriptomics identifies an effectorness gradient shaping the response of CD3+ T cells to cytokines
Cano-Gomez et al., Nat Commun 11, 1801 (2020)

Naive CD4+ T-cells
Memory CD4+ T-cells

Replicate some analysis on bulk RNA sequences
Analysis on single cell